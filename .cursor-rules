# 🤖 Cursor Agent 開發規範

## 📋 專案標準化規範
這個專案是一個廣告自動化平台，具有高度標準化的架構模式。所有 AI Agent 開發時必須嚴格遵循以下規範。

## 🎯 新廣告類型開發標準流程

### 階段 1：需求收集 (必須完成)
當用戶要求開發新廣告類型時，必須收集以下完整資訊：

```yaml
廣告類型定義:
  ad_type: "英文名稱 (snake_case 格式)"
  chinese_name: "繁體中文顯示名稱"
  icon: "廣告圖示 (emoji)"
  interaction_type: "interactive_widget|slide_animation|popup_video|countdown_timer|simple_display"
  payload_type: "payload_game_widget|payload_vote_widget|payload_popup_json"
  
特殊欄位定義 (至少1個):
  - name: "欄位名稱 (snake_case)"
    type: "text|url|number|color|select"
    label: "顯示標籤"
    required: true|false
    default_value: "預設值"
    placeholder: "輸入提示"
    help_text: "欄位說明"
```

### 階段 2：使用標準化生成器
**必須使用** `workflows/templates/standard_ad_template.py` 中的 `AdTemplateGenerator` 類：

```python
from workflows.templates.standard_ad_template import AdTemplateGenerator

generator = AdTemplateGenerator()
result = generator.generate_complete_ad_type(ad_definition)
```

### 階段 3：檔案生成順序
1. **生成模板文件**: `templates/{ad_type}_ad.html`
2. **更新路由**: 在 `app/routes/main.py` 末尾添加路由代碼
3. **更新導航**: 在 `templates/base.html` 的導航區添加連結
4. **測試驗證**: 確認頁面載入和基本功能正常

## 🏗️ 架構強制約定

### 檔案命名約定
```
模板檔案: templates/{ad_type}_ad.html
路由名稱: /{ad_type}-ad, /create-{ad_type}-ad, /clear-{ad_type}-form
函數名稱: {ad_type}_ad(), create_{ad_type}_ad(), clear_{ad_type}_form()
Session Key: {ad_type}_form_data
```

### HTML 結構約定 (強制使用)
```html
{% extends "base.html" %}
{% block title %}{chinese_name}建立{% endblock %}

{% block content %}
<div class="main-content-wrapper">
    <div class="form-column">
        <!-- 表單區域 -->
        <div class="field-group">
            <h3>📋 基本廣告資訊</h3>
            <!-- 標準基本欄位 -->
        </div>
        
        <div class="field-group">
            <h3>廣告素材</h3>
            <!-- 標準素材欄位 -->
        </div>
        
        <div class="field-group">
            <h3>⚙️ {chinese_name}設定</h3>
            <!-- 特殊欄位區域 -->
        </div>
    </div>
    
    <div class="preview-column">
        <!-- 預覽區域 -->
    </div>
</div>
{% endblock %}

{% block additional_scripts %}
<!-- 標準化 JavaScript -->
{% endblock %}
```

### CSS 類別約定 (強制使用)
```css
.main-content-wrapper    /* 主容器 */
.form-column            /* 表單欄位 */
.preview-column         /* 預覽欄位 */
.field-group            /* 區域分組 */
.form-grid-2            /* 雙欄網格 */
.form-grid-3            /* 三欄網格 */
.form-row               /* 表單行 */
.help-text              /* 幫助文字 */
.clear-form-btn         /* 清除按鈕 */
```

### JavaScript 約定 (強制實作)
```javascript
// 必須實作的函數
function debounce(func, wait) { /* 防抖函數 */ }
const autoSaveForm = debounce(() => { /* 自動儲存 */ }, 500);
function updatePreview() { /* 即時預覽 */ }
function updatePayload() { /* Payload 生成 */ }

// 必須的事件監聽器
document.addEventListener('DOMContentLoaded', function() {
    // 初始化邏輯
});
```

### 路由約定 (強制格式)
```python
@main_bp.route('/{ad_type}-ad')
def {ad_type}_ad():
    """顯示 {chinese_name} 創建頁面"""
    form_data = session.get('{ad_type}_form_data', {})
    return render_template('{ad_type}_ad.html', **form_data)

@main_bp.route('/create-{ad_type}-ad', methods=['POST'])
def create_{ad_type}_ad():
    """處理 {chinese_name} 創建請求"""
    # 標準化處理邏輯
    
@main_bp.route('/clear-{ad_type}-form', methods=['POST'])
def clear_{ad_type}_form():
    """清除 {chinese_name} 表單數據"""
    # 標準化清除邏輯
```

## 🚫 禁止事項

### 絕對不可以做的事：
1. **不可修改基礎架構**: 不得修改 `base.html` 的核心結構
2. **不可創建新的 CSS 類別**: 必須使用現有的標準化 CSS 類別
3. **不可跳過驗證**: 必須完成所有檢查清單項目
4. **不可使用非標準命名**: 所有命名必須符合約定
5. **不可省略錯誤處理**: 必須包含完整的 try-catch 邏輯

### 代碼品質要求：
1. **100% 使用繁體中文**: 所有使用者介面文字
2. **完整的錯誤處理**: 每個路由都必須有 try-catch
3. **Session 管理**: 必須實作表單狀態保存
4. **即時預覽**: 必須實作即時預覽功能
5. **自動儲存**: 必須實作防抖自動儲存

## ✅ Agent 成功檢查清單

### 生成完成後必須驗證：
```markdown
### 檔案檢查 ✅
- [ ] templates/{ad_type}_ad.html 已生成且語法正確
- [ ] 路由代碼已正確添加到 app/routes/main.py
- [ ] 導航連結已添加到 base.html
- [ ] 所有檔案使用 UTF-8 編碼

### 結構檢查 ✅
- [ ] 模板正確繼承 base.html
- [ ] 使用標準化 CSS 類別
- [ ] 三區域表單結構完整
- [ ] JavaScript 包含所有必要函數

### 功能檢查 ✅
- [ ] 頁面載入無錯誤
- [ ] 表單提交功能正常
- [ ] 預覽功能運作
- [ ] 清除表單功能正常
- [ ] Session 儲存機制正常

### 命名檢查 ✅
- [ ] 所有命名符合 snake_case 約定
- [ ] 路由 URL 格式正確
- [ ] 函數命名符合約定
- [ ] 變數命名一致
```

## 🎯 效率目標

### 開發時間標準：
- **需求收集**: ≤ 5 分鐘
- **代碼生成**: ≤ 10 分鐘
- **測試驗證**: ≤ 5 分鐘
- **總開發時間**: ≤ 20 分鐘

### 品質標準：
- **功能完整性**: 100%
- **架構一致性**: 100%
- **命名規範性**: 100%
- **測試通過率**: 100%

## 📝 使用方式

當用戶要求開發新廣告類型時，回應格式：

```markdown
### 開始新廣告類型開發

我將使用標準化 workflow 為您開發 {廣告類型} 廣告。

**收集到的需求：**
- 廣告類型：{ad_type}
- 中文名稱：{chinese_name}
- 特殊欄位：{fields_summary}
- Payload 類型：{payload_type}

**開發進度：**
✅ 需求驗證完成
⏳ 正在生成模板文件...
⏳ 正在生成路由代碼...
⏳ 正在更新導航...
⏳ 正在驗證功能...

**完成狀態：**
✅ 模板文件：templates/{ad_type}_ad.html
✅ 路由更新：3個標準路由已添加
✅ 導航更新：已添加 {icon} {chinese_name} 連結
✅ 功能測試：所有基礎功能正常
✅ 開發時間：{actual_time} 分鐘

🎉 {chinese_name} 廣告類型開發完成！
```

## 🔧 輔助工具

### 必須使用的工具：
1. **AdTemplateGenerator**: 自動化代碼生成
2. **檢查清單**: 確保開發完整性
3. **驗證腳本**: 確保代碼品質

### 參考文件：
- `workflows/AGENT_DEVELOPMENT_GUIDE.md`: 詳細開發指南
- `workflows/FINAL_RECOMMENDED_WORKFLOW.md`: 完整工作流程
- `workflows/templates/standard_ad_template.py`: 模板生成器

## 💡 最佳實踐

1. **總是先驗證需求完整性**
2. **使用標準化生成器避免手工編碼**
3. **嚴格遵循命名約定**
4. **完成開發後立即測試**
5. **提供清晰的完成報告**

遵循這些規範，確保每次廣告類型開發都能產出**高品質、一致性、可維護**的代碼！